stages:
  - test
  - build

variables:
  FF_USE_FASTZIP: "true"

# https://stackoverflow.com/a/36050711/925125
# enable caching gradle downloads
before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches
    - ui-tests/build/launcherDownloads

.test_matrix:
  stage: test
  after_script:
    - java -version
  parallel:
    matrix:
      - TYPE: "PC" # PyCharm Community
        VERSION: [ "2021.2.4", "2021.3.3", "2022.1.4", "2022.2.5" ]
      - TYPE: "PY" # PyCharm Professional
        VERSION: [ "2021.2.4", "2021.3.3", "2022.1.4", "2022.2.5" ]
      # starting with 2022.3 we need jdk 17
      - TYPE: "PC" # PyCharm Community
        VERSION: [ "2022.3.3", "2023.1.4", "2023.2.4" ]
        SOURCE_SCRIPT: "/bin/use_jdk17" # enables using jdk 17
      - TYPE: "PY" # PyCharm Professional
        VERSION: [ "2022.3.3", "2023.1.4", "2023.2.4" ]
        SOURCE_SCRIPT: "/bin/use_jdk17" # enables using jdk 17
      # TODO add LATEST-EAP-SNAPSHOT to tested versions

run_tests:
  extends: .test_matrix
  script:
    - if [[ $SOURCE_SCRIPT ]] ; then source "$SOURCE_SCRIPT"; fi
    - AT_WTIOIT_PYCHARM_PLUGIN_testVersion="$VERSION" AT_WTIOIT_PYCHARM_PLUGIN_testType="$TYPE" ./gradlew :test
  artifacts:
    reports:
      junit: build/test-results/test/TEST-*.xml
    paths:
      - build/reports
    when: always

run_ui_tests:
  extends: .test_matrix
  script:
    - if [[ $TYPE == "PC" ]] ; then echo "Skipping ui tests for PyCharm Community until it is supported"; exit 0 ; fi
    - if [[ $SOURCE_SCRIPT ]] ; then source "$SOURCE_SCRIPT"; fi
    - export DISPLAY=:99.0
    - Xvfb -ac :99 -screen 0 1920x1080x24 &
    - ./gradlew :buildPlugin
    - AT_WTIOIT_PYCHARM_PLUGIN_testVersion="$VERSION" AT_WTIOIT_PYCHARM_PLUGIN_testType="$TYPE" ./gradlew ui-test:test
  artifacts:
    reports:
      # TODO add junit reports for robotframework UI tests
      junit: build/test-results/test/TEST-*.xml
    paths:
      - build/reports
      - ui-tests/build/reports
    when: always

verify_plugin:
  stage: test
  script:
    - ./gradlew :verifyPlugin
  after_script:
    - java -version

plugin_verifier:
  stage: test
  script:
    - ./gradlew :runPluginVerifier
  after_script:
    - java -version
  artifacts:
    paths:
      - build/reports/pluginVerifier/
    when: always

build:
  stage: build
  script:
    - ./gradlew :buildPlugin
  artifacts:
    paths:
      - build/libs/instrumented-odoo_plugin-*.jar
      - build/libs/odoo_plugin-*.jar
      - "build/distributions/Odoo Autocompletion Support-*.jar"